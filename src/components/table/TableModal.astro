---
import DeleteEdit from '../buttons/DeleteEdit.tsx';

// Define las interfaces para los encabezados y las filas
interface Header {
  label: string;
  key: string;
}

interface Row {
  id: number;
  [key: string]: any;
}

// Tipar las propiedades de Astro y con as verifico que el tipo sea correcto
const props = Astro.props as { headers: Header[]; rows: Row[]; url: string };
const { headers, rows, url } = props;

// Manejo de Edit y Eliminar

---

<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    
  <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
      <tr>
        <th scope="col" class="p-4">
          <div class="flex items-center">
            <input id="checkbox-all-search" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" />
            <label for="checkbox-all-search" class="sr-only">checkbox</label>
          </div>
        </th>
        {headers.map((header) => (
          <th scope="col" class="px-6 py-3">{header.label}</th>
        ))}
        <th scope="col" class="px-6 py-3">Action</th>
      </tr>
    </thead>
    <tbody>
      {rows.map((row, index) => (
        <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
          <td class="w-4 p-4">
            <div class="flex items-center">
              <input id={`checkbox-${row.id}`} type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" />
              <label for={`checkbox-${row.id}`} class="sr-only">checkbox</label>
            </div>
          </td>
          {headers.map((header) => (
            <td class="px-6 py-3">{row[header.key]}</td>  
            
          ))}
          <td class="px-6 py-3">
            <button class="bg-transparent p-2" onclick={`editClient(${row.id})`}>
              <svg class="w-6 h-6 text-gray-800 dark:text-white hover:text-blue-500 dark:hover:text-blue-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m14.304 4.844 2.852 2.852M7 7H4a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-4.5m2.409-9.91a2.017 2.017 0 0 1 0 2.853l-6.844 6.844L8 14l.713-3.565 6.844-6.844a2.015 2.015 0 0 1 2.852 0Z" />
              </svg>
            </button>
            
            {console.log("paso id", row.id)}
      
            <DeleteEdit client:visible id={row.id} url={url} />

          </td>
        </tr>
      ))}
    </tbody>
  </table>
</div>

